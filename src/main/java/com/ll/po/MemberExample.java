package com.ll.po;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class MemberExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table member
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table member
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table member
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table member
     *
     * @mbggenerated
     */
    public MemberExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table member
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table member
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table member
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table member
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table member
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table member
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table member
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table member
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table member
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table member
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table member
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andMIdIsNull() {
            addCriterion("m_id is null");
            return (Criteria) this;
        }

        public Criteria andMIdIsNotNull() {
            addCriterion("m_id is not null");
            return (Criteria) this;
        }

        public Criteria andMIdEqualTo(Integer value) {
            addCriterion("m_id =", value, "mId");
            return (Criteria) this;
        }

        public Criteria andMIdNotEqualTo(Integer value) {
            addCriterion("m_id <>", value, "mId");
            return (Criteria) this;
        }

        public Criteria andMIdGreaterThan(Integer value) {
            addCriterion("m_id >", value, "mId");
            return (Criteria) this;
        }

        public Criteria andMIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("m_id >=", value, "mId");
            return (Criteria) this;
        }

        public Criteria andMIdLessThan(Integer value) {
            addCriterion("m_id <", value, "mId");
            return (Criteria) this;
        }

        public Criteria andMIdLessThanOrEqualTo(Integer value) {
            addCriterion("m_id <=", value, "mId");
            return (Criteria) this;
        }

        public Criteria andMIdIn(List<Integer> values) {
            addCriterion("m_id in", values, "mId");
            return (Criteria) this;
        }

        public Criteria andMIdNotIn(List<Integer> values) {
            addCriterion("m_id not in", values, "mId");
            return (Criteria) this;
        }

        public Criteria andMIdBetween(Integer value1, Integer value2) {
            addCriterion("m_id between", value1, value2, "mId");
            return (Criteria) this;
        }

        public Criteria andMIdNotBetween(Integer value1, Integer value2) {
            addCriterion("m_id not between", value1, value2, "mId");
            return (Criteria) this;
        }

        public Criteria andMSdateIsNull() {
            addCriterion("m_sdate is null");
            return (Criteria) this;
        }

        public Criteria andMSdateIsNotNull() {
            addCriterion("m_sdate is not null");
            return (Criteria) this;
        }

        public Criteria andMSdateEqualTo(Date value) {
            addCriterion("m_sdate =", value, "mSdate");
            return (Criteria) this;
        }

        public Criteria andMSdateNotEqualTo(Date value) {
            addCriterion("m_sdate <>", value, "mSdate");
            return (Criteria) this;
        }

        public Criteria andMSdateGreaterThan(Date value) {
            addCriterion("m_sdate >", value, "mSdate");
            return (Criteria) this;
        }

        public Criteria andMSdateGreaterThanOrEqualTo(Date value) {
            addCriterion("m_sdate >=", value, "mSdate");
            return (Criteria) this;
        }

        public Criteria andMSdateLessThan(Date value) {
            addCriterion("m_sdate <", value, "mSdate");
            return (Criteria) this;
        }

        public Criteria andMSdateLessThanOrEqualTo(Date value) {
            addCriterion("m_sdate <=", value, "mSdate");
            return (Criteria) this;
        }

        public Criteria andMSdateIn(List<Date> values) {
            addCriterion("m_sdate in", values, "mSdate");
            return (Criteria) this;
        }

        public Criteria andMSdateNotIn(List<Date> values) {
            addCriterion("m_sdate not in", values, "mSdate");
            return (Criteria) this;
        }

        public Criteria andMSdateBetween(Date value1, Date value2) {
            addCriterion("m_sdate between", value1, value2, "mSdate");
            return (Criteria) this;
        }

        public Criteria andMSdateNotBetween(Date value1, Date value2) {
            addCriterion("m_sdate not between", value1, value2, "mSdate");
            return (Criteria) this;
        }

        public Criteria andMEdateIsNull() {
            addCriterion("m_edate is null");
            return (Criteria) this;
        }

        public Criteria andMEdateIsNotNull() {
            addCriterion("m_edate is not null");
            return (Criteria) this;
        }

        public Criteria andMEdateEqualTo(Date value) {
            addCriterion("m_edate =", value, "mEdate");
            return (Criteria) this;
        }

        public Criteria andMEdateNotEqualTo(Date value) {
            addCriterion("m_edate <>", value, "mEdate");
            return (Criteria) this;
        }

        public Criteria andMEdateGreaterThan(Date value) {
            addCriterion("m_edate >", value, "mEdate");
            return (Criteria) this;
        }

        public Criteria andMEdateGreaterThanOrEqualTo(Date value) {
            addCriterion("m_edate >=", value, "mEdate");
            return (Criteria) this;
        }

        public Criteria andMEdateLessThan(Date value) {
            addCriterion("m_edate <", value, "mEdate");
            return (Criteria) this;
        }

        public Criteria andMEdateLessThanOrEqualTo(Date value) {
            addCriterion("m_edate <=", value, "mEdate");
            return (Criteria) this;
        }

        public Criteria andMEdateIn(List<Date> values) {
            addCriterion("m_edate in", values, "mEdate");
            return (Criteria) this;
        }

        public Criteria andMEdateNotIn(List<Date> values) {
            addCriterion("m_edate not in", values, "mEdate");
            return (Criteria) this;
        }

        public Criteria andMEdateBetween(Date value1, Date value2) {
            addCriterion("m_edate between", value1, value2, "mEdate");
            return (Criteria) this;
        }

        public Criteria andMEdateNotBetween(Date value1, Date value2) {
            addCriterion("m_edate not between", value1, value2, "mEdate");
            return (Criteria) this;
        }

        public Criteria andMStatusIsNull() {
            addCriterion("m_status is null");
            return (Criteria) this;
        }

        public Criteria andMStatusIsNotNull() {
            addCriterion("m_status is not null");
            return (Criteria) this;
        }

        public Criteria andMStatusEqualTo(Integer value) {
            addCriterion("m_status =", value, "mStatus");
            return (Criteria) this;
        }

        public Criteria andMStatusNotEqualTo(Integer value) {
            addCriterion("m_status <>", value, "mStatus");
            return (Criteria) this;
        }

        public Criteria andMStatusGreaterThan(Integer value) {
            addCriterion("m_status >", value, "mStatus");
            return (Criteria) this;
        }

        public Criteria andMStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("m_status >=", value, "mStatus");
            return (Criteria) this;
        }

        public Criteria andMStatusLessThan(Integer value) {
            addCriterion("m_status <", value, "mStatus");
            return (Criteria) this;
        }

        public Criteria andMStatusLessThanOrEqualTo(Integer value) {
            addCriterion("m_status <=", value, "mStatus");
            return (Criteria) this;
        }

        public Criteria andMStatusIn(List<Integer> values) {
            addCriterion("m_status in", values, "mStatus");
            return (Criteria) this;
        }

        public Criteria andMStatusNotIn(List<Integer> values) {
            addCriterion("m_status not in", values, "mStatus");
            return (Criteria) this;
        }

        public Criteria andMStatusBetween(Integer value1, Integer value2) {
            addCriterion("m_status between", value1, value2, "mStatus");
            return (Criteria) this;
        }

        public Criteria andMStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("m_status not between", value1, value2, "mStatus");
            return (Criteria) this;
        }

        public Criteria andMTempIsNull() {
            addCriterion("m_temp is null");
            return (Criteria) this;
        }

        public Criteria andMTempIsNotNull() {
            addCriterion("m_temp is not null");
            return (Criteria) this;
        }

        public Criteria andMTempEqualTo(String value) {
            addCriterion("m_temp =", value, "mTemp");
            return (Criteria) this;
        }

        public Criteria andMTempNotEqualTo(String value) {
            addCriterion("m_temp <>", value, "mTemp");
            return (Criteria) this;
        }

        public Criteria andMTempGreaterThan(String value) {
            addCriterion("m_temp >", value, "mTemp");
            return (Criteria) this;
        }

        public Criteria andMTempGreaterThanOrEqualTo(String value) {
            addCriterion("m_temp >=", value, "mTemp");
            return (Criteria) this;
        }

        public Criteria andMTempLessThan(String value) {
            addCriterion("m_temp <", value, "mTemp");
            return (Criteria) this;
        }

        public Criteria andMTempLessThanOrEqualTo(String value) {
            addCriterion("m_temp <=", value, "mTemp");
            return (Criteria) this;
        }

        public Criteria andMTempLike(String value) {
            addCriterion("m_temp like", value, "mTemp");
            return (Criteria) this;
        }

        public Criteria andMTempNotLike(String value) {
            addCriterion("m_temp not like", value, "mTemp");
            return (Criteria) this;
        }

        public Criteria andMTempIn(List<String> values) {
            addCriterion("m_temp in", values, "mTemp");
            return (Criteria) this;
        }

        public Criteria andMTempNotIn(List<String> values) {
            addCriterion("m_temp not in", values, "mTemp");
            return (Criteria) this;
        }

        public Criteria andMTempBetween(String value1, String value2) {
            addCriterion("m_temp between", value1, value2, "mTemp");
            return (Criteria) this;
        }

        public Criteria andMTempNotBetween(String value1, String value2) {
            addCriterion("m_temp not between", value1, value2, "mTemp");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table member
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table member
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}